import { Node, Symbol } from "typescript";

/**
 * 
 * @param node Node Tree to walk thru
 */
export function * ThruWalker(node: Node): Generator<Node, void>{
    // Yield self the first
    yield node;
    // Loop Child
    for(const child of node.getChildren()){
        yield * ThruWalker(child);
    }
}

/**
 * @param symbol check if the symbol is defined by declaration
 */
export function isFromDeclarationFile(symbol: Symbol){
    // If file is not present at all then its probably something autogenerated,
    // so le'ts return true (as declaration) 
    return symbol.valueDeclaration?.getSourceFile()?.isDeclarationFile??true;
}